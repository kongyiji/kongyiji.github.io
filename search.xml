<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 7安装Node.js</title>
      <link href="/2019/05/05/install-nodejs-in-CentOS-7/"/>
      <url>/2019/05/05/install-nodejs-in-CentOS-7/</url>
      
        <content type="html"><![CDATA[<h1 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h1><ul><li>Node.js版本：8.11.1</li><li>系统版本：CentOS 7.4.1708 X64</li></ul><a id="more"></a><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>使用EPEL仓库安装<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 安装EPEL仓库</span><br><span class="line">yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"><span class="meta">#</span> 安装Node.js和npm</span><br><span class="line">sudo yum install nodejs npm --enablerepo=epel</span><br></pre></td></tr></table></figure></p><p>使用yum仓库文件安装<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 安装yum源文件</span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -</span><br><span class="line"><span class="meta">#</span> 安装编译模块</span><br><span class="line">sudo yum install gcc-c++ make</span><br><span class="line"><span class="meta">#</span> 安装Node.js和npm</span><br><span class="line">sudo yum install nodejs</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10上多Git账号</title>
      <link href="/2019/05/05/multi-git-accounts-in-windows-10/"/>
      <url>/2019/05/05/multi-git-accounts-in-windows-10/</url>
      
        <content type="html"><![CDATA[<h1 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h1><ul><li>OS版本：Windows 10</li><li>Git版本：2.19.2.windows.1</li></ul><h1 id="配置多Git账号步骤"><a href="#配置多Git账号步骤" class="headerlink" title="配置多Git账号步骤"></a>配置多Git账号步骤</h1><p>一般有多个Git账户的时候需要配置，比如需要同时使用GitHub和GitLab</p><a id="more"></a><p><strong>1. 生成GitHub的SSH公钥和私钥</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "githubmail@github.com"</span><br><span class="line"><span class="meta">#</span> 将id_rsa重命名成id_rsa_github</span><br></pre></td></tr></table></figure><p><strong>2. 生成GitLab的SSH公钥和私钥</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "gitlabmail@gitlab.com"</span><br><span class="line"><span class="meta">#</span> 将id_rsa重命名成id_rsa_github</span><br></pre></td></tr></table></figure><p><strong>3. 确认公钥和私钥在正确的文件夹中</strong></p><p>确保<code>id_rsa_github</code>、<code>id_rsa_github.pub</code>、<code>id_rsa_gitlab</code>和<code>id_rsa_gitlab.pub</code>四个文件在<code>C:\Users\your_user_name\.ssh</code>文件夹当中。</p><p><strong>4. 将公钥分别添加至对应的服务器上</strong></p><p>公钥文件指的是以<code>.pub</code>结尾的文件，此处是<code>id_rsa_github.pub</code>和<code>id_rsa_gitlab.pub</code>。</p><p><strong>5. 创建config文件</strong></p><p>在<code>C:\Users\your_user_name\.ssh</code>文件夹中创建config文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># GitHub配置</span><br><span class="line">Host github.com                 </span><br><span class="line">HostName github.com</span><br><span class="line">IdentityFile C:\\Users\\your_user_name\\.ssh\\id_rsa_github</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">User github_username</span><br><span class="line"></span><br><span class="line"># GitLab配置</span><br><span class="line">Host gitlab.com</span><br><span class="line">HostName gitlab.com</span><br><span class="line">IdentityFile C:\\Users\\your_user_name\\.ssh\\id_rsa_gitlab</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">User gitlab_username</span><br></pre></td></tr></table></figure><p><strong>6. 测试</strong></p><p>命令行测试连通性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@gitlab.com</span><br></pre></td></tr></table></figure><h1 id="配置局部Git账号"><a href="#配置局部Git账号" class="headerlink" title="配置局部Git账号"></a>配置局部Git账号</h1><p>由于未在全局变量中配置Git账号信息，需要在项目中配置局部变量。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 进入Git项目中，输入如下命令</span><br><span class="line">git config user.name "your_name"</span><br><span class="line">git config user.email "your_email@example.com"</span><br><span class="line"><span class="meta">#</span> 如果需要全局Git账号，可以输入如下命令（如果没有局部Git账号则会用全局Git账号）</span><br><span class="line">git config --global user.name "your_name"</span><br><span class="line">git config --global user.email "your_email@example.com"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次使用flask</title>
      <link href="/2018/11/19/first-flask-app/"/>
      <url>/2018/11/19/first-flask-app/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>看了某公众号出的题目后，跟着写了个简单计算个税的Python程序，想着怎么把它做成页面呢。正好看到有关flask的文章，就熟悉下这个简单的web框架。</p><a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>有两部分组成，一部分是Flask框架的，一部分是HTML的模板</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, url_for</span><br><span class="line"></span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算个税的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tax_calc</span><span class="params">(deduct_insurance)</span>:</span></span><br><span class="line">    threshold = <span class="number">5000</span></span><br><span class="line">    money = deduct_insurance - threshold</span><br><span class="line">    tax = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    calc_tables = (</span><br><span class="line">        (<span class="number">80000</span>, <span class="number">0.45</span>, <span class="number">15160</span>),</span><br><span class="line">        (<span class="number">55000</span>, <span class="number">0.35</span>, <span class="number">7160</span>),</span><br><span class="line">        (<span class="number">35000</span>, <span class="number">0.3</span>, <span class="number">4410</span>),</span><br><span class="line">        (<span class="number">25000</span>, <span class="number">0.25</span>, <span class="number">2660</span>),</span><br><span class="line">        (<span class="number">12000</span>, <span class="number">0.2</span>, <span class="number">1410</span>),</span><br><span class="line">        (<span class="number">3000</span>, <span class="number">0.1</span>, <span class="number">210</span>),</span><br><span class="line">        (<span class="number">0</span>, <span class="number">0.03</span>, <span class="number">0</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> calc_tables:</span><br><span class="line">        <span class="keyword">if</span> money &gt; table[<span class="number">0</span>]:</span><br><span class="line">            tax = money * table[<span class="number">1</span>] - table[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    after_tax = deduct_insurance - tax</span><br><span class="line">    <span class="keyword">return</span> tax, after_tax</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['POST', 'GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="comment"># 获取index.html中输入的money值</span></span><br><span class="line">        deduct_insurance = eval(request.form[<span class="string">'money'</span>])</span><br><span class="line">        <span class="comment"># 调用函数计算赋值</span></span><br><span class="line">        tax, result = tax_calc(deduct_insurance)</span><br><span class="line">        <span class="comment"># 传递个税的参数，并重新渲染页面</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, TAX = tax, RESULT = result)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>HTML模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    &#123;% block head %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock %&#125; 个税计算 <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">        请输入缴纳五险一金后的工资：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"money"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        需要缴纳的个税是：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"tax"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; TAX &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        税后工资是：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"result"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; RESULT &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>虽说代码是正常跑起来了，但很多都是囫囵吞枣。<br>仍需努力啊。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flask </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo在GitHub上创建个人博客</title>
      <link href="/2018/08/13/how-to-create-blog-in-GitHub-pages-with-Hexo/"/>
      <url>/2018/08/13/how-to-create-blog-in-GitHub-pages-with-Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>心血来潮想试试怎么搭个个人博客，三分钟热度。<br>第一篇文章就先大致写写如何搭建起来这个博客吧。</p><a id="more"></a><h1 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h1><ul><li>OS: Windows 10</li><li>Git version: 2.17.0.windows.1<ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">官网</a></li></ul></li><li>Node.js version: v8.11.3<ul><li><a href="https://nodejs.org" target="_blank" rel="noopener">官网</a></li></ul></li></ul><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p><a href="https://hexo.io/index.html" target="_blank" rel="noopener">Hexo官网</a>上是最新的安装步骤，和本文不符的地方，以官网教程为主。</p><h2 id="npm命令安装Hexo"><a href="#npm命令安装Hexo" class="headerlink" title="npm命令安装Hexo"></a>npm命令安装Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo version</span><br><span class="line">hexo-cli: 1.1.0</span><br></pre></td></tr></table></figure><h2 id="初始化目录"><a href="#初始化目录" class="headerlink" title="初始化目录"></a>初始化目录</h2><p>现在新建博客的存放目录，可以先建好目录，也可以初始化的同时新建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /d D:\</span><br><span class="line">$ hexo init blog <span class="comment"># 如果目录已经事先建好，进入目录中，执行hexo init</span></span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install <span class="comment"># 安装依赖包，天朝慢可以使用淘宝镜像，加上参数--registry=https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h2 id="试运行"><a href="#试运行" class="headerlink" title="试运行"></a>试运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，看到<strong>Hello World</strong>的文章，表示安装成功，就这么简单。</p><h1 id="使用GitHub-Pages展示博客"><a href="#使用GitHub-Pages展示博客" class="headerlink" title="使用GitHub Pages展示博客"></a>使用GitHub Pages展示博客</h1><p>本地的博客能浏览了，就得想办法放到网上了，其实有很多方案，GitHub Pages是其中一个方案。</p><h2 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h2><p>如果没有GitHub账号，请先注册一个。</p><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><p>登录GitHub后，个人首页相当醒目的地方有个”Start a project”的按钮，点击创建仓库。需要注意的是，<strong>仓库名称必须以<code>your-username.github.io</code>的格式命名</strong>，如我的GitHub用户名是kongyiji，那么仓库名称必须是<code>kongyiji.github.io</code>。</p><h2 id="修改-gitignore文件"><a href="#修改-gitignore文件" class="headerlink" title="修改.gitignore文件"></a>修改<code>.gitignore</code>文件</h2><p>blog文件夹下的<code>.gitignore</code>文件中配置忽略上传至GitHub的文件或文件夹，新添加一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">package-lock.json</span><br></pre></td></tr></table></figure><h2 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h2><h3 id="安装hexo-deploy-git"><a href="#安装hexo-deploy-git" class="headerlink" title="安装hexo-deploy-git"></a>安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deploy-git</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="修改-config-yml站点配置文件"><a href="#修改-config-yml站点配置文件" class="headerlink" title="修改_config.yml站点配置文件"></a>修改<code>_config.yml</code>站点配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>repo</td><td>库（Repository）地址</td></tr><tr><td>branch</td><td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</td></tr><tr><td>message</td><td>自定义提交信息 (默认为 Site updated: &#123;&#123; now(‘YYYY-MM-DD HH:mm:ss’) &#125;&#125;)</td></tr></tbody></table><p>repo可以使用https或者ssh的方式</p><h2 id="推送至远程GitHub仓库"><a href="#推送至远程GitHub仓库" class="headerlink" title="推送至远程GitHub仓库"></a>推送至远程GitHub仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate <span class="comment"># 可以缩写成hexo g</span></span><br><span class="line">$ hexo deploy <span class="comment"># 可以缩写成hexo d</span></span><br></pre></td></tr></table></figure><ul><li>配置的是https的方式，此处会跳出登录框输入GitHub的用户名和密码即可。</li><li>配置的是ssh方式，需要先配置GitHub上的ssh公钥</li></ul><p>至此，博客可以正常显示了。浏览器输入自己的博客地址看看吧。</p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>hexo有许多丰富多彩的主题，大部分主题都可以在官网的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题页面</a>找到。<br>我用的是next主题，简单耐用。现在GitHub上最新的是6的版本，地址在这：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> 。</p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>blog目录下有个themes文件夹，主题都在这里面，可以存放多个主题，但是只能使用其中一个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /d D:\blog\</span><br><span class="line"><span class="comment"># 可以直接下载，也可以当成子模块来管理</span></span><br><span class="line"><span class="comment"># 使用clone，如果后期环境变更，主题也需要重新拉取</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"><span class="comment"># 使用子模块，迁移到新环境后使用 git clone --recurse-submodules 命令可以全部拉取</span></span><br><span class="line">$ git submodule add https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>更新依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes\next\</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>使用主题需要将blog文件夹下的站点配置文件<code>_config.yml</code>进行修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next # 将landscape改成next</span><br></pre></td></tr></table></figure><p>之后重新生成博客，主题就更换了，还有更多的个性化参数可以参考作者的<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">操作手册</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>重新推送到GitHub上后，博客就更新了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>博客的雏形基本就有了，之后就是个性化的东西了，这些就各自发挥啦。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
